[{"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryActions.ts":"1","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.tsx":"2","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\seed\\seedData.ts":"3","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.styles.ts":"4","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.tsx":"5","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.tsx":"6","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\App.tsx":"7","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.tsx":"8","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postActions.ts":"9"},{"size":602,"mtime":1612396074044,"results":"10","hashOfConfig":"11"},{"size":6267,"mtime":1613144492944,"results":"12","hashOfConfig":"11"},{"size":9018,"mtime":1613150841293,"results":"13","hashOfConfig":"11"},{"size":905,"mtime":1613150602827,"results":"14","hashOfConfig":"11"},{"size":654,"mtime":1613150566942,"results":"15","hashOfConfig":"11"},{"size":1371,"mtime":1613147250995,"results":"16","hashOfConfig":"11"},{"size":4282,"mtime":1613146935183,"results":"17","hashOfConfig":"11"},{"size":778,"mtime":1613150636815,"results":"18","hashOfConfig":"11"},{"size":1875,"mtime":1613086466559,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hvmpmn",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryActions.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\seed\\seedData.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\App.tsx",["39"],"import React, {useEffect} from \"react\";\r\nimport \"./App.css\";\r\n// Pages\r\nimport Homepage from \"./pages/homepage/homepage\";\r\nimport CreatePostPage from \"./pages/create-post-page/CreatePostPage\";\r\nimport CategoryResultsPage from \"./pages/search-results-page/CategoryResultsPage\";\r\nimport SubCategoryResultsPage from './pages/search-results-page/SubCategoryResultsPage';\r\nimport PostPage from \"./pages/post-page/PostPage\";\r\nimport UserProfile from \"./pages/user-profile-page/UserProfile\";\r\n// Components:\r\nimport CustomSnackbar from \"./components/snackbar-feedback/Snackbar\";\r\n// React Router:\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n// Seed Data:\r\nimport { Category, seedCategories, seedPosts, User } from \"./seed/seedData\";\r\n// Redux State Management:\r\nimport { getCategories } from \"./redux/category/categoryActions\";\r\nimport { categoryState } from \"./redux/category/categoryReducer\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootStore } from \"./redux/store\";\r\nimport { getAllUsers } from \"./redux/user/userActions\";\r\nimport { getAllPosts } from \"./redux/post/postActions\";\r\nimport { userState } from \"./redux/user/userReducer\";\r\nimport { postState } from \"./redux/post/postReducer\";\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  // Grabbing pieces of our state:\r\n  const categories = useSelector<RootStore, categoryState[\"categories\"]>(state => state.category.categories);\r\n  console.log('CATEGORIES:', categories);\r\n  const users = useSelector<RootStore, userState[\"users\"]>(state => state.user.users);\r\n  console.log('USERS:', users);\r\n  const posts = useSelector<RootStore, postState[\"posts\"]>(state => state.post.posts);\r\n  console.log('POSTS:', posts);\r\n\r\n  // Making get requests to database to initialize state:\r\n  useEffect(() => {\r\n    dispatch(getCategories());\r\n    dispatch(getAllUsers());\r\n    dispatch(getAllPosts());\r\n  }, []);\r\n\r\n  const findCategory = (id: string) => {\r\n    const foundCategory = seedCategories.find(function(category){\r\n      return category.id === id;\r\n    });\r\n\r\n    if(foundCategory){\r\n      return foundCategory\r\n    } else {\r\n      return {\r\n        name: \"Sorry nothing was found\",\r\n        id: '',\r\n        imageURL: '',\r\n        subCategories: [],\r\n      }\r\n    }\r\n  };\r\n\r\n  const findSubCategory = (category: Category, id: string) => {\r\n    const foundSubCategory = category.subCategories.find(function(subCategory){\r\n      return subCategory.id === id;\r\n    });\r\n\r\n    if(foundSubCategory) {\r\n      return foundSubCategory\r\n    } else {\r\n      return {\r\n        name: 'Sorry nothing was found',\r\n        id: '',\r\n        posts: [],\r\n      }\r\n    }\r\n  };\r\n\r\n  const findPost = (id: string) => {\r\n    const foundPost = seedPosts.find(function(post){\r\n      return post.id === id;\r\n    });\r\n\r\n    if(foundPost) {\r\n      return foundPost\r\n    } else {\r\n      return {\r\n        name: 'Sorry this post was not found',\r\n        id: '',\r\n        price: '',\r\n        location: '',\r\n        category: '',\r\n        subCategory: '',\r\n        description: '',\r\n        imageUrl: '',\r\n        author: {} as User\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Homepage} />\r\n          <Route exact path=\"/user/:userId\" component={UserProfile} />\r\n          <Route exact path=\"/posts/new\" component={CreatePostPage} />\r\n          <Route \r\n              exact \r\n              path='/posts/:postId' \r\n              render={({match}) => \r\n              <PostPage \r\n                post={findPost(match.params.postId)}\r\n              />\r\n            }\r\n              />\r\n          <Route \r\n            exact path=\"/:categoryId/\"\r\n            render={(routeProps) => \r\n              <CategoryResultsPage category={findCategory(routeProps.match.params.categoryId)}/>\r\n            } \r\n          />\r\n          <Route \r\n            exact path=\"/:categoryId/:subCategoryId\"\r\n            render={(routeProps) => \r\n              <SubCategoryResultsPage subCategory={findSubCategory(findCategory(routeProps.match.params.categoryId), routeProps.match.params.subCategoryId)}/>\r\n            } \r\n            />\r\n        </Switch>\r\n      </Router>\r\n      <CustomSnackbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postActions.ts",[],{"ruleId":"40","severity":1,"message":"41","line":42,"column":6,"nodeType":"42","endLine":42,"endColumn":8,"suggestions":"43"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["44"],{"desc":"45","fix":"46"},"Update the dependencies array to be: [dispatch]",{"range":"47","text":"48"},[1915,1917],"[dispatch]"]