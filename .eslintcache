[{"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryActions.ts":"1","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.tsx":"2","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\seed\\seedData.ts":"3","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.styles.ts":"4","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.tsx":"5","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.tsx":"6","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\App.tsx":"7","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.tsx":"8","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postActions.ts":"9","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\homepage\\homepage.tsx":"10","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userReducer.ts":"11","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\snackbars\\snackbarsTypes.ts":"12","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-user-info\\EditUserInfo.tsx":"13","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-user-info\\EditUserInfo.styles.ts":"14","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.styles.ts":"15","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userActions.ts":"16","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\navbar\\Navbar.tsx":"17","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\signin-signup\\SignInSignUp.tsx":"18","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\user-drop-down-icon\\UserDropDown.tsx":"19","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-searchbar\\CustomSearchBar.tsx":"20","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-drawer\\CustomDrawer.tsx":"21","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\index.tsx":"22","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\create-post-page\\CreatePostPage.tsx":"23","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postTypes.ts":"24","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\drop-down-menu\\DropDownMenu.tsx":"25","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\create-posting-button\\CreatePostingButton.tsx":"26","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\CategoryResultsPage.tsx":"27","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\user-profile-page\\UserProfile.tsx":"28","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\post-page\\PostPage.tsx":"29","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\snackbar-feedback\\Snackbar.tsx":"30","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userTypes.ts":"31","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-radio-buttons\\CategoryRadioButtons.tsx":"32","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-radio-buttons\\CategoryRadioButtons.styles.ts":"33","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\item-link\\ItemLink.styles.ts":"34","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-list\\PostListContainer.tsx":"35","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\item-link\\ItemLink.tsx":"36","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.styles.ts":"37","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.styles.ts":"38","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-drawer\\CustomDrawer.styles.ts":"39","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\navbar\\Navbar.styles.ts":"40","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\reusable-header\\ReusableHeader.tsx":"41","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\styles\\constants\\MediaQueries.ts":"42","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-overview\\CategoryOverview.tsx":"43","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postReducer.ts":"44","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\user-profile-page\\UserProfile.styles.ts":"45","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-list\\PostListContainer.styles.ts":"46","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\reusable-header\\ReusableHeader.styles.ts":"47","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-post-info\\EditPost.tsx":"48"},{"size":602,"mtime":1612396074044,"results":"49","hashOfConfig":"50"},{"size":6287,"mtime":1613324904042,"results":"51","hashOfConfig":"50"},{"size":9017,"mtime":1613324706121,"results":"52","hashOfConfig":"50"},{"size":905,"mtime":1613150602827,"results":"53","hashOfConfig":"50"},{"size":654,"mtime":1613150566942,"results":"54","hashOfConfig":"50"},{"size":2444,"mtime":1613332902937,"results":"55","hashOfConfig":"50"},{"size":3023,"mtime":1613329035290,"results":"56","hashOfConfig":"50"},{"size":778,"mtime":1613150636815,"results":"57","hashOfConfig":"50"},{"size":3769,"mtime":1613333184749,"results":"58","hashOfConfig":"50"},{"size":444,"mtime":1613325181206,"results":"59","hashOfConfig":"50"},{"size":2088,"mtime":1613239539231,"results":"60","hashOfConfig":"50"},{"size":390,"mtime":1613086466573,"results":"61","hashOfConfig":"50"},{"size":6527,"mtime":1613239165529,"results":"62","hashOfConfig":"50"},{"size":664,"mtime":1612396074023,"results":"63","hashOfConfig":"50"},{"size":258,"mtime":1611851907730,"results":"64","hashOfConfig":"50"},{"size":3811,"mtime":1613240795863,"results":"65","hashOfConfig":"50"},{"size":2717,"mtime":1613235172959,"results":"66","hashOfConfig":"50"},{"size":7857,"mtime":1613253896185,"results":"67","hashOfConfig":"50"},{"size":3658,"mtime":1613235349348,"results":"68","hashOfConfig":"50"},{"size":1045,"mtime":1611851540225,"results":"69","hashOfConfig":"50"},{"size":2961,"mtime":1612463289961,"results":"70","hashOfConfig":"50"},{"size":628,"mtime":1612385964715,"results":"71","hashOfConfig":"50"},{"size":424,"mtime":1611851540244,"results":"72","hashOfConfig":"50"},{"size":1406,"mtime":1613332656680,"results":"73","hashOfConfig":"50"},{"size":3107,"mtime":1611851540227,"results":"74","hashOfConfig":"50"},{"size":504,"mtime":1613086466511,"results":"75","hashOfConfig":"50"},{"size":735,"mtime":1613256184330,"results":"76","hashOfConfig":"50"},{"size":2260,"mtime":1613326860657,"results":"77","hashOfConfig":"50"},{"size":481,"mtime":1613329394888,"results":"78","hashOfConfig":"50"},{"size":1411,"mtime":1613086466541,"results":"79","hashOfConfig":"50"},{"size":2437,"mtime":1613240840909,"results":"80","hashOfConfig":"50"},{"size":1148,"mtime":1613324837009,"results":"81","hashOfConfig":"50"},{"size":264,"mtime":1611851540220,"results":"82","hashOfConfig":"50"},{"size":777,"mtime":1612143107588,"results":"83","hashOfConfig":"50"},{"size":1720,"mtime":1613327484415,"results":"84","hashOfConfig":"50"},{"size":905,"mtime":1613327507974,"results":"85","hashOfConfig":"50"},{"size":1129,"mtime":1611851540234,"results":"86","hashOfConfig":"50"},{"size":871,"mtime":1613330867331,"results":"87","hashOfConfig":"50"},{"size":1547,"mtime":1611851540223,"results":"88","hashOfConfig":"50"},{"size":2340,"mtime":1611851540237,"results":"89","hashOfConfig":"50"},{"size":367,"mtime":1611851540230,"results":"90","hashOfConfig":"50"},{"size":231,"mtime":1611851540259,"results":"91","hashOfConfig":"50"},{"size":340,"mtime":1613256085298,"results":"92","hashOfConfig":"50"},{"size":1193,"mtime":1613332972882,"results":"93","hashOfConfig":"50"},{"size":300,"mtime":1613326877620,"results":"94","hashOfConfig":"50"},{"size":534,"mtime":1611851917736,"results":"95","hashOfConfig":"50"},{"size":190,"mtime":1611851540229,"results":"96","hashOfConfig":"50"},{"size":7026,"mtime":1613333051462,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1hvmpmn",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"107"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryActions.ts",[],["206","207"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\seed\\seedData.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.styles.ts",[],["208","209"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.tsx",["210"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\App.tsx",["211","212","213","214"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.tsx",[],["215","216"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postActions.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\homepage\\homepage.tsx",["217"],"import React from 'react';\r\n// Containers:\r\nimport Navbar from '../../containers/navbar/Navbar';\r\nimport CategoryListContainer from '../../containers/category-list/CategoryListContainer';\r\nimport PostListContainer from '../../containers/post-list/PostListContainer';\r\n// Seed Data:\r\n\r\nconst Homepage: React.FC = () => {\r\n  \r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <CategoryListContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Homepage",["218","219"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userReducer.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\snackbars\\snackbarsTypes.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-user-info\\EditUserInfo.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-user-info\\EditUserInfo.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userActions.ts",["220","221"],"import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { OPEN_SNACKBAR } from '../snackbars/snackbarsTypes';\r\nimport { \r\n  User, \r\n  UserDispatchTypes, \r\n  SET_CURRENT_USER, \r\n  REGISTRATION_START, \r\n  REGISTRATION_FAILED, \r\n  REGISTRATION_SUCCESS, \r\n  USERS_LOADING, \r\n  USERS_SUCCESS, \r\n  USERS_FAILED, \r\n  LOGOUT_CURRENT_USER,\r\n  UserLogin,\r\n  LOGIN_LOADING,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  UPDATE_USER\r\n} from './userTypes';\r\n\r\nexport const registerAndSetNewUser = (user: User) => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: REGISTRATION_START\r\n    });\r\n\r\n    const newUser = await axios.post('https://craigs2list-dev.herokuapp.com/users', user);\r\n\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: 'Registration Successful, Please Login!',\r\n      severity: 'success'\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REGISTRATION_FAILED,\r\n      error: error\r\n    });\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: 'Registration Failed',\r\n      severity: 'error'\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllUsers = () => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: USERS_LOADING\r\n    });\r\n\r\n    const res = await axios.get('https://craigs2list-dev.herokuapp.com/users');\r\n\r\n    dispatch({\r\n      type: USERS_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USERS_FAILED,\r\n      error: error\r\n    })\r\n  }\r\n};\r\n\r\nexport const setCurrentUser = (user: User) => {\r\n  \r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: user,\r\n    token: ''\r\n  }\r\n};\r\n\r\nexport const logoutCurrentUser = () => (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  dispatch({\r\n    type: LOGOUT_CURRENT_USER,\r\n    token: '',\r\n  });\r\n\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {} as User,\r\n    token: '',\r\n  });\r\n  \r\n  dispatch({\r\n    type: OPEN_SNACKBAR,\r\n    message: \"Logout Successful\",\r\n    severity: 'warning'\r\n  })\r\n};\r\n\r\nexport const loginUser = (userLogin : UserLogin) => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: LOGIN_LOADING\r\n    });\r\n    \r\n    const loginInfo = await axios.post('https://craigs2list-dev.herokuapp.com/login', userLogin);\r\n    \r\n    const user = await axios.get(`https://craigs2list-dev.herokuapp.com/users/${loginInfo.data.user_id}`);\r\n    \r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: user.data,\r\n      token: loginInfo.data.token\r\n    });\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: userLogin,\r\n      token: loginInfo.data.token\r\n    });\r\n    console.log('token assigned:')\r\n\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: 'Login Successful',\r\n      severity: 'success'\r\n    });\r\n\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAILED\r\n    });\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: error.message,\r\n      severity: 'error'\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user: User, userId: number | undefined, token: string | undefined) => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    }\r\n    const updatedUser = await axios.patch(`https://craigs2list-dev.herokuapp.com/users/${userId}`, user, config);\r\n    console.log(updatedUser);\r\n    dispatch({\r\n      type: UPDATE_USER,\r\n      user: updatedUser.data\r\n    });\r\n\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: updatedUser.data,\r\n    });\r\n\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: 'Update successful',\r\n      severity: 'success'\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: error.message,\r\n      severity: 'error'\r\n    })\r\n  }\r\n};","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\navbar\\Navbar.tsx",["222"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\signin-signup\\SignInSignUp.tsx",["223","224"],"import React, { useState, useEffect } from 'react';\r\n// Material UI Components:\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\n// Material UI Form Validator:\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n// Styles:\r\nimport { useStyles } from './SignInSignUp.styles';\r\n// Redux State Management:\r\nimport { loginUser, registerAndSetNewUser, getAllUsers } from '../../redux/user/userActions';\r\nimport { User, UserLogin } from '../../redux/user/userTypes';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userState } from '../../redux/user/userReducer';\r\nimport { RootStore } from '../../redux/store';\r\n\r\nconst SignInSignUp:React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  \r\n  const users = useSelector<RootStore, userState[\"users\"]>((state) => state.user.users);\r\n  \r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule('isEmailUnique', (value: string) => \r\n      users.every(({email}) => email?.toLowerCase() !== value.toLowerCase())\r\n    );\r\n    ValidatorForm.addValidationRule('passwordsMustMatch', () => \r\n      password === passwordConfirmation \r\n    );\r\n  }, []);\r\n\r\n  const [openNameForm, setOpenNameForm] = useState<boolean>(false);\r\n  const [user, setUser] = useState<User>({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    city: '',\r\n    state: '',\r\n    zip: '',\r\n  }); \r\n\r\n  const [userLogin, setUserLogin] = useState<UserLogin>({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState<string>('');\r\n\r\n  const { name, email, password, city, state, zip } = user;\r\n\r\n  const handleOpenNameForm = () => {\r\n    setOpenNameForm(true);\r\n  };\r\n\r\n  const handleCloseNameForm = () => {\r\n    setOpenNameForm(false);\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n  };\r\n  const handleLoginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserLogin({ ...userLogin, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleLogin = async (event: any) => {\r\n    event.preventDefault();\r\n    dispatch(loginUser(userLogin));\r\n\r\n    setUserLogin({\r\n      email: '',\r\n      password: ''\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    \r\n    dispatch(registerAndSetNewUser(user));\r\n    \r\n    setUser({\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      city: '',\r\n      state: '',\r\n      zip: '',\r\n    });\r\n    setPasswordConfirmation('');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button color=\"primary\" onClick={handleOpenNameForm}>\r\n        Sign Up / Login\r\n      </Button>\r\n      <Dialog \r\n        open={openNameForm} \r\n        onClose={handleCloseNameForm} \r\n        aria-labelledby=\"form-dialog-title\" \r\n        className={classes.dialogContainer}\r\n        fullWidth={true}\r\n        maxWidth='lg'\r\n        >\r\n          <DialogContentText className={classes.dialogContentText}>\r\n            Please fill out one of the forms below: \r\n          </DialogContentText>\r\n          <div className={classes.dialogForms}>\r\n            <form \r\n              className={classes.signIn}\r\n              onSubmit={handleLogin}\r\n              >\r\n              <DialogTitle id=\"form-dialog-title\">Sign In</DialogTitle>\r\n              <TextField \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Email\"\r\n                name=\"email\"\r\n                onChange={handleLoginChange}\r\n                value={userLogin.email} />\r\n              <TextField \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleLoginChange}\r\n                value={userLogin.password} />\r\n              <DialogActions>\r\n                <Button type='submit' color=\"primary\" variant='contained'>\r\n                  Sign In\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n            <Divider variant='middle' orientation='vertical' flexItem/>\r\n            <ValidatorForm className={classes.signUp} onSubmit={handleSubmit}>\r\n              <DialogTitle id=\"form-dialog-title\">Sign Up</DialogTitle>\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Name\" \r\n                name='name'\r\n                variant=\"outlined\"\r\n                value={name}\r\n                onChange={handleChange}\r\n                validators={['required']}\r\n                errorMessages={['Name required']}\r\n               />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Email\" \r\n                name='email'\r\n                variant=\"outlined\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={handleChange}\r\n                validators={['required', 'isEmailUnique']}\r\n                errorMessages={['Email Required', 'This email is already in use, please sign in']}\r\n                />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Password\" \r\n                name='password'\r\n                type='password' \r\n                variant=\"outlined\"\r\n                value={password}\r\n                onChange={handleChange} \r\n                validators={['required']}\r\n                errorMessages={['Password Required']}\r\n                />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Confirm Password\" \r\n                name='passwordConfirmation'\r\n                type='password' \r\n                variant=\"outlined\"\r\n                value={passwordConfirmation}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPasswordConfirmation(e.target.value)}\r\n                validators={['required', 'passwordsMustMatch']}\r\n                errorMessages={['Confirm Password', 'Passwords must match']}\r\n                />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"City\" \r\n                name='city'\r\n                variant=\"outlined\"\r\n                value={city}\r\n                onChange={handleChange}\r\n                 />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"State\" \r\n                name='state'\r\n                variant=\"outlined\"\r\n                value={state}\r\n                onChange={handleChange}\r\n                />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Zip Code\" \r\n                name='zip'\r\n                variant=\"outlined\"\r\n                value={zip}\r\n                onChange={handleChange}\r\n                />\r\n              <DialogActions>\r\n                <Button type='submit' color=\"primary\" variant='contained'>\r\n                  Join now!\r\n                </Button>\r\n              </DialogActions>\r\n            </ValidatorForm>\r\n          </div>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SignInSignUp;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\user-drop-down-icon\\UserDropDown.tsx",[],["225","226"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-searchbar\\CustomSearchBar.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-drawer\\CustomDrawer.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\index.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\create-post-page\\CreatePostPage.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postTypes.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\drop-down-menu\\DropDownMenu.tsx",[],["227","228"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\create-posting-button\\CreatePostingButton.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\CategoryResultsPage.tsx",["229","230","231"],"import React from \"react\";\r\nimport Navbar from \"../../containers/navbar/Navbar\";\r\nimport { Category, Subcategory } from \"../../seed/seedData\";\r\nimport { useStyles } from \"./CategoryResultsPage.styles\";\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport CategoryOverview from '../../components/category-overview/CategoryOverview';\r\ninterface Props {\r\n  category: string,\r\n  match: any\r\n};\r\n\r\nconst CategoryResultsPage: React.FC<Props> = ({category, match}) => {\r\n  const classes = useStyles()\r\n\r\n  console.log(match);\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path={`${match.path}`} component={CategoryOverview}/>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryResultsPage;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\user-profile-page\\UserProfile.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\post-page\\PostPage.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\snackbar-feedback\\Snackbar.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userTypes.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-radio-buttons\\CategoryRadioButtons.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-radio-buttons\\CategoryRadioButtons.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\item-link\\ItemLink.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-list\\PostListContainer.tsx",["232"],"import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport ItemLink from '../../components/item-link/ItemLink';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useStyles } from './PostListContainer.styles';\r\nimport ReusableHeader from '../../components/reusable-header/ReusableHeader';\r\nimport { Link } from 'react-router-dom';\r\nimport { Post } from '../../redux/post/postTypes';\r\ninterface Props {\r\n  header: string,\r\n  posts: Post[],\r\n  seeAllLink: string,\r\n}\r\n\r\nconst ItemListContainer:React.FC<Props> = ({header, posts, seeAllLink}) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.section}>\r\n      <div className={classes.header}>\r\n        <ReusableHeader text={header} fontSize=\"22px\"/>\r\n        { seeAllLink.length > 0 &&\r\n          <Link to={seeAllLink} className={classes.link}>See all...</Link>\r\n        }\r\n      </div>\r\n      <Grid \r\n        container \r\n        spacing={3} \r\n        className={classes.root} \r\n        style={seeAllLink.length > 0 ? {overflow: 'hidden'} : {}}>\r\n        { seeAllLink.length > 0 ?\r\n          posts.slice(0, 6).map(post => (\r\n            <ItemLink \r\n              imageUrl={post.image_url} \r\n              title={post.title} \r\n              price={post.price}\r\n              key={post.post_id} \r\n              id={`${post.post_id}`}\r\n            />\r\n          )) : \r\n          posts.map(post => (\r\n            <ItemLink \r\n              imageUrl={post.image_url} \r\n              title={post.title} \r\n              price={post.price}\r\n              key={post.post_id} \r\n              id={`${post.post_id}`}\r\n            />\r\n          ))\r\n        }\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemListContainer;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\item-link\\ItemLink.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-drawer\\CustomDrawer.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\navbar\\Navbar.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\reusable-header\\ReusableHeader.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\styles\\constants\\MediaQueries.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-overview\\CategoryOverview.tsx",["233","234"],"import React from 'react';\r\nimport ReusableHeader from \"../../components/reusable-header/ReusableHeader\";\r\nimport PostListContainer from \"../../containers/post-list/PostListContainer\";\r\n\r\nconst CategoryOverview: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <h1>Goods</h1>\r\n      \r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CategoryOverview;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postReducer.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\user-profile-page\\UserProfile.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-list\\PostListContainer.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\reusable-header\\ReusableHeader.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-post-info\\EditPost.tsx",[],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"235","replacedBy":"239"},{"ruleId":"237","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":28,"column":6,"nodeType":"243","endLine":28,"endColumn":8,"suggestions":"244"},{"ruleId":"241","severity":1,"message":"245","line":25,"column":6,"nodeType":"243","endLine":25,"endColumn":8,"suggestions":"246"},{"ruleId":"247","severity":1,"message":"248","line":27,"column":9,"nodeType":"249","messageId":"250","endLine":27,"endColumn":21},{"ruleId":"247","severity":1,"message":"251","line":44,"column":9,"nodeType":"249","messageId":"250","endLine":44,"endColumn":24},{"ruleId":"247","severity":1,"message":"252","line":60,"column":9,"nodeType":"249","messageId":"250","endLine":60,"endColumn":17},{"ruleId":"235","replacedBy":"253"},{"ruleId":"237","replacedBy":"254"},{"ruleId":"247","severity":1,"message":"255","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":25},{"ruleId":"235","replacedBy":"256"},{"ruleId":"237","replacedBy":"257"},{"ruleId":"247","severity":1,"message":"258","line":10,"column":3,"nodeType":"249","messageId":"250","endLine":10,"endColumn":23},{"ruleId":"247","severity":1,"message":"259","line":28,"column":11,"nodeType":"249","messageId":"250","endLine":28,"endColumn":18},{"ruleId":"260","severity":2,"message":"261","line":50,"column":34,"nodeType":"249","messageId":"262","endLine":50,"endColumn":41},{"ruleId":"247","severity":1,"message":"263","line":15,"column":44,"nodeType":"249","messageId":"250","endLine":15,"endColumn":55},{"ruleId":"241","severity":1,"message":"264","line":34,"column":6,"nodeType":"243","endLine":34,"endColumn":8,"suggestions":"265"},{"ruleId":"235","replacedBy":"266"},{"ruleId":"237","replacedBy":"267"},{"ruleId":"235","replacedBy":"268"},{"ruleId":"237","replacedBy":"269"},{"ruleId":"247","severity":1,"message":"270","line":3,"column":10,"nodeType":"249","messageId":"250","endLine":3,"endColumn":18},{"ruleId":"247","severity":1,"message":"271","line":3,"column":20,"nodeType":"249","messageId":"250","endLine":3,"endColumn":31},{"ruleId":"247","severity":1,"message":"272","line":13,"column":9,"nodeType":"249","messageId":"250","endLine":13,"endColumn":16},{"ruleId":"247","severity":1,"message":"273","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":16},{"ruleId":"247","severity":1,"message":"274","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":22},{"ruleId":"247","severity":1,"message":"255","line":3,"column":8,"nodeType":"249","messageId":"250","endLine":3,"endColumn":25},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],["275"],["276"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.postId'. Either include them or remove the dependency array.","ArrayExpression",["277"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["278"],"@typescript-eslint/no-unused-vars","'findCategory' is assigned a value but never used.","Identifier","unusedVar","'findSubCategory' is assigned a value but never used.","'findPost' is assigned a value but never used.",["275"],["276"],"'PostListContainer' is defined but never used.",["275"],["276"],"'REGISTRATION_SUCCESS' is defined but never used.","'newUser' is assigned a value but never used.","no-restricted-globals","Unexpected use of 'history'.","defaultMessage","'getAllUsers' is defined but never used.","React Hook useEffect has missing dependencies: 'password', 'passwordConfirmation', and 'users'. Either include them or remove the dependency array.",["279"],["275"],["276"],["275"],["276"],"'Category' is defined but never used.","'Subcategory' is defined but never used.","'classes' is assigned a value but never used.","'Button' is defined but never used.","'ReusableHeader' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [dispatch, match.params.postId]",{"range":"286","text":"287"},"Update the dependencies array to be: [dispatch]",{"range":"288","text":"289"},"Update the dependencies array to be: [password, passwordConfirmation, users]",{"range":"290","text":"291"},[1227,1229],"[dispatch, match.params.postId]",[971,973],"[dispatch]",[1507,1509],"[password, passwordConfirmation, users]"]