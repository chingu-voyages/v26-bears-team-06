[{"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryActions.ts":"1","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.tsx":"2","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\seed\\seedData.ts":"3","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.styles.ts":"4","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.tsx":"5","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.tsx":"6","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\App.tsx":"7","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.tsx":"8","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postActions.ts":"9","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\homepage\\homepage.tsx":"10","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userReducer.ts":"11","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\snackbars\\snackbarsTypes.ts":"12","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-user-info\\EditUserInfo.tsx":"13","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-user-info\\EditUserInfo.styles.ts":"14","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.styles.ts":"15","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userActions.ts":"16","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\navbar\\Navbar.tsx":"17","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\signin-signup\\SignInSignUp.tsx":"18","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\user-drop-down-icon\\UserDropDown.tsx":"19","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-searchbar\\CustomSearchBar.tsx":"20","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-drawer\\CustomDrawer.tsx":"21","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\index.tsx":"22","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\create-post-page\\CreatePostPage.tsx":"23","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postTypes.ts":"24","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\drop-down-menu\\DropDownMenu.tsx":"25","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\create-posting-button\\CreatePostingButton.tsx":"26","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\CategoryResultsPage.tsx":"27","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\user-profile-page\\UserProfile.tsx":"28","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\post-page\\PostPage.tsx":"29","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\snackbar-feedback\\Snackbar.tsx":"30","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userTypes.ts":"31","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-radio-buttons\\CategoryRadioButtons.tsx":"32","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-radio-buttons\\CategoryRadioButtons.styles.ts":"33","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\item-link\\ItemLink.styles.ts":"34","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-list\\PostListContainer.tsx":"35","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\item-link\\ItemLink.tsx":"36","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.styles.ts":"37","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.styles.ts":"38","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-drawer\\CustomDrawer.styles.ts":"39","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\navbar\\Navbar.styles.ts":"40","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\reusable-header\\ReusableHeader.tsx":"41","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\styles\\constants\\MediaQueries.ts":"42","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postReducer.ts":"43","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\user-profile-page\\UserProfile.styles.ts":"44","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-list\\PostListContainer.styles.ts":"45","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\reusable-header\\ReusableHeader.styles.ts":"46","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-post-info\\EditPost.tsx":"47","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\store.ts":"48","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\snackbars\\snackbarsReducer.ts":"49","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\create-post-page\\CreatePostPage.styles.ts":"50","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryTypes.ts":"51","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryReducer.ts":"52","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\drawer\\drawerReducer.ts":"53","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\SubCategoryResultsPage.tsx":"54","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-searchbar\\CustomSearchBar.styles.ts":"55","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-post-info\\EditPost.styles.ts":"56","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\SearchResultsPage.tsx":"57","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\reportWebVitals.ts":"58","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\post-page\\PostPage.styles.ts":"59"},{"size":602,"mtime":1612396074044,"results":"60","hashOfConfig":"61"},{"size":6566,"mtime":1613447791477,"results":"62","hashOfConfig":"61"},{"size":9075,"mtime":1613426377751,"results":"63","hashOfConfig":"61"},{"size":905,"mtime":1613150602827,"results":"64","hashOfConfig":"61"},{"size":670,"mtime":1613335532355,"results":"65","hashOfConfig":"61"},{"size":2566,"mtime":1613449097739,"results":"66","hashOfConfig":"61"},{"size":2324,"mtime":1613449042176,"results":"67","hashOfConfig":"61"},{"size":778,"mtime":1613426998835,"results":"68","hashOfConfig":"61"},{"size":4575,"mtime":1613426377747,"results":"69","hashOfConfig":"61"},{"size":788,"mtime":1613582639260,"results":"70","hashOfConfig":"61"},{"size":2088,"mtime":1613239539231,"results":"71","hashOfConfig":"61"},{"size":390,"mtime":1613086466573,"results":"72","hashOfConfig":"61"},{"size":6527,"mtime":1613239165529,"results":"73","hashOfConfig":"61"},{"size":664,"mtime":1612396074023,"results":"74","hashOfConfig":"61"},{"size":258,"mtime":1611851907730,"results":"75","hashOfConfig":"61"},{"size":3811,"mtime":1613240795863,"results":"76","hashOfConfig":"61"},{"size":2717,"mtime":1613235172959,"results":"77","hashOfConfig":"61"},{"size":7857,"mtime":1613253896185,"results":"78","hashOfConfig":"61"},{"size":3658,"mtime":1613235349348,"results":"79","hashOfConfig":"61"},{"size":1464,"mtime":1613425855777,"results":"80","hashOfConfig":"61"},{"size":2961,"mtime":1612463289961,"results":"81","hashOfConfig":"61"},{"size":628,"mtime":1612385964715,"results":"82","hashOfConfig":"61"},{"size":424,"mtime":1611851540244,"results":"83","hashOfConfig":"61"},{"size":1620,"mtime":1613417220563,"results":"84","hashOfConfig":"61"},{"size":3123,"mtime":1613426377726,"results":"85","hashOfConfig":"61"},{"size":504,"mtime":1613086466511,"results":"86","hashOfConfig":"61"},{"size":1335,"mtime":1613426743460,"results":"87","hashOfConfig":"61"},{"size":2259,"mtime":1613448893471,"results":"88","hashOfConfig":"61"},{"size":526,"mtime":1613449156003,"results":"89","hashOfConfig":"61"},{"size":1411,"mtime":1613086466541,"results":"90","hashOfConfig":"61"},{"size":2437,"mtime":1613240840909,"results":"91","hashOfConfig":"61"},{"size":1173,"mtime":1613426796359,"results":"92","hashOfConfig":"61"},{"size":264,"mtime":1611851540220,"results":"93","hashOfConfig":"61"},{"size":881,"mtime":1613426377730,"results":"94","hashOfConfig":"61"},{"size":1770,"mtime":1613583420336,"results":"95","hashOfConfig":"61"},{"size":910,"mtime":1613425347004,"results":"96","hashOfConfig":"61"},{"size":1129,"mtime":1611851540234,"results":"97","hashOfConfig":"61"},{"size":871,"mtime":1613330867331,"results":"98","hashOfConfig":"61"},{"size":1547,"mtime":1611851540223,"results":"99","hashOfConfig":"61"},{"size":2340,"mtime":1611851540237,"results":"100","hashOfConfig":"61"},{"size":367,"mtime":1611851540230,"results":"101","hashOfConfig":"61"},{"size":231,"mtime":1611851540259,"results":"102","hashOfConfig":"61"},{"size":1395,"mtime":1613418911385,"results":"103","hashOfConfig":"61"},{"size":321,"mtime":1613426377744,"results":"104","hashOfConfig":"61"},{"size":534,"mtime":1611851917736,"results":"105","hashOfConfig":"61"},{"size":190,"mtime":1611851540229,"results":"106","hashOfConfig":"61"},{"size":5720,"mtime":1613448829857,"results":"107","hashOfConfig":"61"},{"size":538,"mtime":1612396074061,"results":"108","hashOfConfig":"61"},{"size":762,"mtime":1613086466569,"results":"109","hashOfConfig":"61"},{"size":265,"mtime":1611851540244,"results":"110","hashOfConfig":"61"},{"size":725,"mtime":1613086466558,"results":"111","hashOfConfig":"61"},{"size":853,"mtime":1612396074046,"results":"112","hashOfConfig":"61"},{"size":465,"mtime":1611851540250,"results":"113","hashOfConfig":"61"},{"size":1504,"mtime":1613426377743,"results":"114","hashOfConfig":"61"},{"size":1716,"mtime":1613419318043,"results":"115","hashOfConfig":"61"},{"size":667,"mtime":1613426377727,"results":"116","hashOfConfig":"61"},{"size":1232,"mtime":1613427163207,"results":"117","hashOfConfig":"61"},{"size":440,"mtime":1611851540256,"results":"118","hashOfConfig":"61"},{"size":235,"mtime":1612143107603,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1hvmpmn",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"153"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryActions.ts",[],["252","253"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\seed\\seedData.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.styles.ts",[],["254","255"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.tsx",["256"],"import React, { useEffect } from 'react';\r\n// Components:\r\nimport EditPostInfo from '../../components/edit-post-info/EditPost';\r\n// Material UI:\r\nimport Button from '@material-ui/core/Button';\r\nimport { useStyles } from './PostContainer.styles';\r\n// Redux:\r\nimport { openSnackbar } from '../../redux/snackbars/snackbarsActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootStore } from '../../redux/store';\r\nimport { postState } from '../../redux/post/postReducer';\r\nimport { userState } from '../../redux/user/userReducer';\r\nimport { deletePost, getPost } from '../../redux/post/postActions';\r\ninterface Props {\r\n  match: any,\r\n  history: any\r\n}\r\n\r\nconst PostContainer: React.FC<Props> = ({match, history}) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const post = useSelector<RootStore, postState['currentPost']>(state => state.post.currentPost);\r\n  const currentUser = useSelector<RootStore, userState['currentUser']>(state => state.user.currentUser);\r\n  const token = useSelector<RootStore, userState[\"token\"]>((state) => state.user.token);\r\n  console.log('POST:', post)\r\n  const {title, image_url, city, state, description, price, user, user_id } = post;\r\n  \r\n  \r\n  useEffect(() => {\r\n    dispatch(getPost(match.params.postId))\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    dispatch(openSnackbar('Opening third party email service', 'success'));\r\n    window.location.href = `mailto:${user?.email}`;\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deletePost(post.post_id, token));\r\n    history.push(`/user/${currentUser.user_id}`)\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.titleSection}>\r\n        <h1>{title}</h1>\r\n        <Button variant='contained' color='primary' onClick={handleClick}>Reply</Button>\r\n      </div>\r\n      <img \r\n        className={classes.image}\r\n        src={image_url} alt=\"\" />\r\n      <div className={classes.locationPrice}>\r\n        <span>{city}, {state}</span>\r\n        <span>${price}</span>\r\n      </div>\r\n      <div className={classes.bottomSection}>\r\n        <p>{description}</p>\r\n        <div>\r\n          <Button variant='contained' href='/'>Go Back</Button>\r\n          {\r\n            currentUser.user_id === user_id &&\r\n            <div className={classes.postButtons}>\r\n              <EditPostInfo />\r\n              <Button variant='contained' color='secondary' onClick={handleDelete}>Delete</Button>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )  \r\n};\r\n\r\nexport default PostContainer;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\App.tsx",["257"],"import React, {useEffect} from \"react\";\r\nimport \"./App.css\";\r\n// Pages\r\nimport Homepage from \"./pages/homepage/homepage\";\r\nimport CreatePostPage from \"./pages/create-post-page/CreatePostPage\";\r\nimport CategoryResultsPage from \"./pages/search-results-page/CategoryResultsPage\";\r\nimport SearchResultsPage from './pages/search-results-page/SearchResultsPage';\r\nimport PostPage from \"./pages/post-page/PostPage\";\r\nimport UserProfile from \"./pages/user-profile-page/UserProfile\";\r\n// Components:\r\nimport CustomSnackbar from \"./components/snackbar-feedback/Snackbar\";\r\n// React Router:\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n// Redux State Management:\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAllPosts } from \"./redux/post/postActions\";\r\nimport SubCategoryResultsPage from \"./pages/search-results-page/SubCategoryResultsPage\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  // Making get requests to database to initialize state:\r\n  useEffect(() => {\r\n    dispatch(getAllPosts());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Homepage />} />\r\n          <Route exact path=\"/user/:userId\" component={UserProfile} />\r\n          <Route exact path=\"/posts/new\" component={CreatePostPage} />\r\n          <Route \r\n              exact \r\n              path='/posts/:postId' \r\n              render={({match, history}) => \r\n              <PostPage \r\n                match={match}\r\n                history={history}\r\n              />\r\n            }\r\n              />\r\n          <Route \r\n            exact path=\"/search/:searchQuery\"\r\n            render={({match}) => \r\n              <SearchResultsPage searchQuery={match.params.searchQuery} />\r\n            } \r\n          />\r\n          <Route \r\n            exact path=\"/:categoryId/\"\r\n            render={({match}) => \r\n              <CategoryResultsPage category={match.params.categoryId} match={match} />\r\n            } \r\n          />\r\n          <Route \r\n            path=\"/:categoryId/:subcatId\"\r\n            render={({match}) => \r\n              <SubCategoryResultsPage subcatId={parseInt(match.params.subcatId)} />\r\n            } \r\n          />\r\n        </Switch>\r\n      </Router>\r\n      <CustomSnackbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postActions.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\homepage\\homepage.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userReducer.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\snackbars\\snackbarsTypes.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-user-info\\EditUserInfo.tsx",[],["258","259"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-user-info\\EditUserInfo.styles.ts",[],["260","261"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.styles.ts",[],["262","263"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userActions.ts",["264","265"],"import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { OPEN_SNACKBAR } from '../snackbars/snackbarsTypes';\r\nimport { \r\n  User, \r\n  UserDispatchTypes, \r\n  SET_CURRENT_USER, \r\n  REGISTRATION_START, \r\n  REGISTRATION_FAILED, \r\n  REGISTRATION_SUCCESS, \r\n  USERS_LOADING, \r\n  USERS_SUCCESS, \r\n  USERS_FAILED, \r\n  LOGOUT_CURRENT_USER,\r\n  UserLogin,\r\n  LOGIN_LOADING,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  UPDATE_USER\r\n} from './userTypes';\r\n\r\nexport const registerAndSetNewUser = (user: User) => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: REGISTRATION_START\r\n    });\r\n\r\n    const newUser = await axios.post('https://craigs2list-dev.herokuapp.com/users', user);\r\n\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: 'Registration Successful, Please Login!',\r\n      severity: 'success'\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REGISTRATION_FAILED,\r\n      error: error\r\n    });\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: 'Registration Failed',\r\n      severity: 'error'\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllUsers = () => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: USERS_LOADING\r\n    });\r\n\r\n    const res = await axios.get('https://craigs2list-dev.herokuapp.com/users');\r\n\r\n    dispatch({\r\n      type: USERS_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USERS_FAILED,\r\n      error: error\r\n    })\r\n  }\r\n};\r\n\r\nexport const setCurrentUser = (user: User) => {\r\n  \r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: user,\r\n    token: ''\r\n  }\r\n};\r\n\r\nexport const logoutCurrentUser = () => (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  dispatch({\r\n    type: LOGOUT_CURRENT_USER,\r\n    token: '',\r\n  });\r\n\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {} as User,\r\n    token: '',\r\n  });\r\n  \r\n  dispatch({\r\n    type: OPEN_SNACKBAR,\r\n    message: \"Logout Successful\",\r\n    severity: 'warning'\r\n  })\r\n};\r\n\r\nexport const loginUser = (userLogin : UserLogin) => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: LOGIN_LOADING\r\n    });\r\n    \r\n    const loginInfo = await axios.post('https://craigs2list-dev.herokuapp.com/login', userLogin);\r\n    \r\n    const user = await axios.get(`https://craigs2list-dev.herokuapp.com/users/${loginInfo.data.user_id}`);\r\n    \r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: user.data,\r\n      token: loginInfo.data.token\r\n    });\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: userLogin,\r\n      token: loginInfo.data.token\r\n    });\r\n    console.log('token assigned:')\r\n\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: 'Login Successful',\r\n      severity: 'success'\r\n    });\r\n\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAILED\r\n    });\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: error.message,\r\n      severity: 'error'\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user: User, userId: number | undefined, token: string | undefined) => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    }\r\n    const updatedUser = await axios.patch(`https://craigs2list-dev.herokuapp.com/users/${userId}`, user, config);\r\n    console.log(updatedUser);\r\n    dispatch({\r\n      type: UPDATE_USER,\r\n      user: updatedUser.data\r\n    });\r\n\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: updatedUser.data,\r\n    });\r\n\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: 'Update successful',\r\n      severity: 'success'\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: error.message,\r\n      severity: 'error'\r\n    })\r\n  }\r\n};","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\navbar\\Navbar.tsx",["266"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\signin-signup\\SignInSignUp.tsx",["267","268"],"import React, { useState, useEffect } from 'react';\r\n// Material UI Components:\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\n// Material UI Form Validator:\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n// Styles:\r\nimport { useStyles } from './SignInSignUp.styles';\r\n// Redux State Management:\r\nimport { loginUser, registerAndSetNewUser, getAllUsers } from '../../redux/user/userActions';\r\nimport { User, UserLogin } from '../../redux/user/userTypes';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userState } from '../../redux/user/userReducer';\r\nimport { RootStore } from '../../redux/store';\r\n\r\nconst SignInSignUp:React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  \r\n  const users = useSelector<RootStore, userState[\"users\"]>((state) => state.user.users);\r\n  \r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule('isEmailUnique', (value: string) => \r\n      users.every(({email}) => email?.toLowerCase() !== value.toLowerCase())\r\n    );\r\n    ValidatorForm.addValidationRule('passwordsMustMatch', () => \r\n      password === passwordConfirmation \r\n    );\r\n  }, []);\r\n\r\n  const [openNameForm, setOpenNameForm] = useState<boolean>(false);\r\n  const [user, setUser] = useState<User>({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    city: '',\r\n    state: '',\r\n    zip: '',\r\n  }); \r\n\r\n  const [userLogin, setUserLogin] = useState<UserLogin>({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState<string>('');\r\n\r\n  const { name, email, password, city, state, zip } = user;\r\n\r\n  const handleOpenNameForm = () => {\r\n    setOpenNameForm(true);\r\n  };\r\n\r\n  const handleCloseNameForm = () => {\r\n    setOpenNameForm(false);\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n  };\r\n  const handleLoginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserLogin({ ...userLogin, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleLogin = async (event: any) => {\r\n    event.preventDefault();\r\n    dispatch(loginUser(userLogin));\r\n\r\n    setUserLogin({\r\n      email: '',\r\n      password: ''\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    \r\n    dispatch(registerAndSetNewUser(user));\r\n    \r\n    setUser({\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      city: '',\r\n      state: '',\r\n      zip: '',\r\n    });\r\n    setPasswordConfirmation('');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button color=\"primary\" onClick={handleOpenNameForm}>\r\n        Sign Up / Login\r\n      </Button>\r\n      <Dialog \r\n        open={openNameForm} \r\n        onClose={handleCloseNameForm} \r\n        aria-labelledby=\"form-dialog-title\" \r\n        className={classes.dialogContainer}\r\n        fullWidth={true}\r\n        maxWidth='lg'\r\n        >\r\n          <DialogContentText className={classes.dialogContentText}>\r\n            Please fill out one of the forms below: \r\n          </DialogContentText>\r\n          <div className={classes.dialogForms}>\r\n            <form \r\n              className={classes.signIn}\r\n              onSubmit={handleLogin}\r\n              >\r\n              <DialogTitle id=\"form-dialog-title\">Sign In</DialogTitle>\r\n              <TextField \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Email\"\r\n                name=\"email\"\r\n                onChange={handleLoginChange}\r\n                value={userLogin.email} />\r\n              <TextField \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleLoginChange}\r\n                value={userLogin.password} />\r\n              <DialogActions>\r\n                <Button type='submit' color=\"primary\" variant='contained'>\r\n                  Sign In\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n            <Divider variant='middle' orientation='vertical' flexItem/>\r\n            <ValidatorForm className={classes.signUp} onSubmit={handleSubmit}>\r\n              <DialogTitle id=\"form-dialog-title\">Sign Up</DialogTitle>\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Name\" \r\n                name='name'\r\n                variant=\"outlined\"\r\n                value={name}\r\n                onChange={handleChange}\r\n                validators={['required']}\r\n                errorMessages={['Name required']}\r\n               />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Email\" \r\n                name='email'\r\n                variant=\"outlined\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={handleChange}\r\n                validators={['required', 'isEmailUnique']}\r\n                errorMessages={['Email Required', 'This email is already in use, please sign in']}\r\n                />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Password\" \r\n                name='password'\r\n                type='password' \r\n                variant=\"outlined\"\r\n                value={password}\r\n                onChange={handleChange} \r\n                validators={['required']}\r\n                errorMessages={['Password Required']}\r\n                />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Confirm Password\" \r\n                name='passwordConfirmation'\r\n                type='password' \r\n                variant=\"outlined\"\r\n                value={passwordConfirmation}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPasswordConfirmation(e.target.value)}\r\n                validators={['required', 'passwordsMustMatch']}\r\n                errorMessages={['Confirm Password', 'Passwords must match']}\r\n                />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"City\" \r\n                name='city'\r\n                variant=\"outlined\"\r\n                value={city}\r\n                onChange={handleChange}\r\n                 />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"State\" \r\n                name='state'\r\n                variant=\"outlined\"\r\n                value={state}\r\n                onChange={handleChange}\r\n                />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Zip Code\" \r\n                name='zip'\r\n                variant=\"outlined\"\r\n                value={zip}\r\n                onChange={handleChange}\r\n                />\r\n              <DialogActions>\r\n                <Button type='submit' color=\"primary\" variant='contained'>\r\n                  Join now!\r\n                </Button>\r\n              </DialogActions>\r\n            </ValidatorForm>\r\n          </div>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SignInSignUp;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\user-drop-down-icon\\UserDropDown.tsx",[],["269","270"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-searchbar\\CustomSearchBar.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-drawer\\CustomDrawer.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\index.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\create-post-page\\CreatePostPage.tsx",[],["271","272"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postTypes.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\drop-down-menu\\DropDownMenu.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\create-posting-button\\CreatePostingButton.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\CategoryResultsPage.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\user-profile-page\\UserProfile.tsx",["273"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\post-page\\PostPage.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\snackbar-feedback\\Snackbar.tsx",[],["274","275"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userTypes.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-radio-buttons\\CategoryRadioButtons.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-radio-buttons\\CategoryRadioButtons.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\item-link\\ItemLink.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-list\\PostListContainer.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\item-link\\ItemLink.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.styles.ts",[],["276","277"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-drawer\\CustomDrawer.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\navbar\\Navbar.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\reusable-header\\ReusableHeader.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\styles\\constants\\MediaQueries.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postReducer.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\user-profile-page\\UserProfile.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-list\\PostListContainer.styles.ts",[],["278","279"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\reusable-header\\ReusableHeader.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-post-info\\EditPost.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\store.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\snackbars\\snackbarsReducer.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\create-post-page\\CreatePostPage.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryTypes.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryReducer.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\drawer\\drawerReducer.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\SubCategoryResultsPage.tsx",["280"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-searchbar\\CustomSearchBar.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-post-info\\EditPost.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\SearchResultsPage.tsx",["281"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\reportWebVitals.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\post-page\\PostPage.styles.ts",[],{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","replacedBy":"285"},{"ruleId":"282","replacedBy":"286"},{"ruleId":"284","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":31,"column":6,"nodeType":"290","endLine":31,"endColumn":8,"suggestions":"291"},{"ruleId":"288","severity":1,"message":"292","line":25,"column":6,"nodeType":"290","endLine":25,"endColumn":8,"suggestions":"293"},{"ruleId":"282","replacedBy":"294"},{"ruleId":"284","replacedBy":"295"},{"ruleId":"282","replacedBy":"296"},{"ruleId":"284","replacedBy":"297"},{"ruleId":"282","replacedBy":"298"},{"ruleId":"284","replacedBy":"299"},{"ruleId":"300","severity":1,"message":"301","line":10,"column":3,"nodeType":"302","messageId":"303","endLine":10,"endColumn":23},{"ruleId":"300","severity":1,"message":"304","line":28,"column":11,"nodeType":"302","messageId":"303","endLine":28,"endColumn":18},{"ruleId":"305","severity":2,"message":"306","line":50,"column":34,"nodeType":"302","messageId":"307","endLine":50,"endColumn":41},{"ruleId":"300","severity":1,"message":"308","line":15,"column":44,"nodeType":"302","messageId":"303","endLine":15,"endColumn":55},{"ruleId":"288","severity":1,"message":"309","line":34,"column":6,"nodeType":"290","endLine":34,"endColumn":8,"suggestions":"310"},{"ruleId":"282","replacedBy":"311"},{"ruleId":"284","replacedBy":"312"},{"ruleId":"282","replacedBy":"313"},{"ruleId":"284","replacedBy":"314"},{"ruleId":"300","severity":1,"message":"315","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"282","replacedBy":"316"},{"ruleId":"284","replacedBy":"317"},{"ruleId":"282","replacedBy":"318"},{"ruleId":"284","replacedBy":"319"},{"ruleId":"282","replacedBy":"320"},{"ruleId":"284","replacedBy":"321"},{"ruleId":"288","severity":1,"message":"292","line":25,"column":6,"nodeType":"290","endLine":25,"endColumn":16,"suggestions":"322"},{"ruleId":"288","severity":1,"message":"292","line":21,"column":6,"nodeType":"290","endLine":21,"endColumn":19,"suggestions":"323"},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],["324"],["325"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.postId'. Either include them or remove the dependency array.","ArrayExpression",["326"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["327"],["324"],["325"],["324"],["325"],["324"],["325"],"@typescript-eslint/no-unused-vars","'REGISTRATION_SUCCESS' is defined but never used.","Identifier","unusedVar","'newUser' is assigned a value but never used.","no-restricted-globals","Unexpected use of 'history'.","defaultMessage","'getAllUsers' is defined but never used.","React Hook useEffect has missing dependencies: 'password', 'passwordConfirmation', and 'users'. Either include them or remove the dependency array.",["328"],["324"],["325"],["324"],["325"],"'useEffect' is defined but never used.",["324"],["325"],["324"],["325"],["324"],["325"],["329"],["330"],"no-global-assign","no-unsafe-negation",{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},"Update the dependencies array to be: [dispatch, match.params.postId]",{"range":"341","text":"342"},"Update the dependencies array to be: [dispatch]",{"range":"343","text":"344"},"Update the dependencies array to be: [password, passwordConfirmation, users]",{"range":"345","text":"346"},"Update the dependencies array to be: [dispatch, subcatId]",{"range":"347","text":"348"},"Update the dependencies array to be: [dispatch, searchQuery]",{"range":"349","text":"350"},[1296,1298],"[dispatch, match.params.postId]",[1048,1050],"[dispatch]",[1507,1509],"[password, passwordConfirmation, users]",[1128,1138],"[dispatch, subcatId]",[851,864],"[dispatch, searchQuery]"]