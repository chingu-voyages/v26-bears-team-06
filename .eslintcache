[{"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryActions.ts":"1","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.tsx":"2","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\seed\\seedData.ts":"3","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.styles.ts":"4","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.tsx":"5","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.tsx":"6","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\App.tsx":"7","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.tsx":"8","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postActions.ts":"9","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\homepage\\homepage.tsx":"10","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userReducer.ts":"11","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\snackbars\\snackbarsTypes.ts":"12","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-user-info\\EditUserInfo.tsx":"13","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-user-info\\EditUserInfo.styles.ts":"14","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.styles.ts":"15","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userActions.ts":"16","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\navbar\\Navbar.tsx":"17","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\signin-signup\\SignInSignUp.tsx":"18","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\user-drop-down-icon\\UserDropDown.tsx":"19","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-searchbar\\CustomSearchBar.tsx":"20","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-drawer\\CustomDrawer.tsx":"21","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\index.tsx":"22","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\create-post-page\\CreatePostPage.tsx":"23","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postTypes.ts":"24","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\drop-down-menu\\DropDownMenu.tsx":"25","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\create-posting-button\\CreatePostingButton.tsx":"26","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\CategoryResultsPage.tsx":"27","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\user-profile-page\\UserProfile.tsx":"28","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\post-page\\PostPage.tsx":"29","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\snackbar-feedback\\Snackbar.tsx":"30","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userTypes.ts":"31","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-radio-buttons\\CategoryRadioButtons.tsx":"32","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-radio-buttons\\CategoryRadioButtons.styles.ts":"33","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\item-link\\ItemLink.styles.ts":"34","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-list\\PostListContainer.tsx":"35","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\item-link\\ItemLink.tsx":"36","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.styles.ts":"37","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.styles.ts":"38","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-drawer\\CustomDrawer.styles.ts":"39","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\navbar\\Navbar.styles.ts":"40","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\reusable-header\\ReusableHeader.tsx":"41","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\styles\\constants\\MediaQueries.ts":"42","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-overview\\CategoryOverview.tsx":"43","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postReducer.ts":"44","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\user-profile-page\\UserProfile.styles.ts":"45","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-list\\PostListContainer.styles.ts":"46","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\reusable-header\\ReusableHeader.styles.ts":"47","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-post-info\\EditPost.tsx":"48","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\store.ts":"49","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\snackbars\\snackbarsReducer.ts":"50","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\create-post-page\\CreatePostPage.styles.ts":"51","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryTypes.ts":"52","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryReducer.ts":"53","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\drawer\\drawerReducer.ts":"54","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\SubCategoryResultsPage.tsx":"55","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-searchbar\\CustomSearchBar.styles.ts":"56","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-post-info\\EditPost.styles.ts":"57","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\SearchResultsPage.tsx":"58"},{"size":602,"mtime":1612396074044,"results":"59","hashOfConfig":"60"},{"size":6433,"mtime":1613363547498,"results":"61","hashOfConfig":"60"},{"size":9075,"mtime":1613358699614,"results":"62","hashOfConfig":"60"},{"size":905,"mtime":1613150602827,"results":"63","hashOfConfig":"60"},{"size":670,"mtime":1613335532355,"results":"64","hashOfConfig":"60"},{"size":2452,"mtime":1613341556260,"results":"65","hashOfConfig":"60"},{"size":2282,"mtime":1613419705466,"results":"66","hashOfConfig":"60"},{"size":778,"mtime":1613150636815,"results":"67","hashOfConfig":"60"},{"size":4575,"mtime":1613419608276,"results":"68","hashOfConfig":"60"},{"size":759,"mtime":1613333959706,"results":"69","hashOfConfig":"60"},{"size":2088,"mtime":1613239539231,"results":"70","hashOfConfig":"60"},{"size":390,"mtime":1613086466573,"results":"71","hashOfConfig":"60"},{"size":6527,"mtime":1613239165529,"results":"72","hashOfConfig":"60"},{"size":664,"mtime":1612396074023,"results":"73","hashOfConfig":"60"},{"size":258,"mtime":1611851907730,"results":"74","hashOfConfig":"60"},{"size":3811,"mtime":1613240795863,"results":"75","hashOfConfig":"60"},{"size":2717,"mtime":1613235172959,"results":"76","hashOfConfig":"60"},{"size":7857,"mtime":1613253896185,"results":"77","hashOfConfig":"60"},{"size":3658,"mtime":1613235349348,"results":"78","hashOfConfig":"60"},{"size":1464,"mtime":1613425855777,"results":"79","hashOfConfig":"60"},{"size":2961,"mtime":1612463289961,"results":"80","hashOfConfig":"60"},{"size":628,"mtime":1612385964715,"results":"81","hashOfConfig":"60"},{"size":424,"mtime":1611851540244,"results":"82","hashOfConfig":"60"},{"size":1620,"mtime":1613417220563,"results":"83","hashOfConfig":"60"},{"size":3123,"mtime":1613335568559,"results":"84","hashOfConfig":"60"},{"size":504,"mtime":1613086466511,"results":"85","hashOfConfig":"60"},{"size":1416,"mtime":1613416187667,"results":"86","hashOfConfig":"60"},{"size":2358,"mtime":1613416361565,"results":"87","hashOfConfig":"60"},{"size":481,"mtime":1613329394888,"results":"88","hashOfConfig":"60"},{"size":1411,"mtime":1613086466541,"results":"89","hashOfConfig":"60"},{"size":2437,"mtime":1613240840909,"results":"90","hashOfConfig":"60"},{"size":1145,"mtime":1613342944370,"results":"91","hashOfConfig":"60"},{"size":264,"mtime":1611851540220,"results":"92","hashOfConfig":"60"},{"size":881,"mtime":1613425782517,"results":"93","hashOfConfig":"60"},{"size":1717,"mtime":1613363484688,"results":"94","hashOfConfig":"60"},{"size":910,"mtime":1613425347004,"results":"95","hashOfConfig":"60"},{"size":1129,"mtime":1611851540234,"results":"96","hashOfConfig":"60"},{"size":871,"mtime":1613330867331,"results":"97","hashOfConfig":"60"},{"size":1547,"mtime":1611851540223,"results":"98","hashOfConfig":"60"},{"size":2340,"mtime":1611851540237,"results":"99","hashOfConfig":"60"},{"size":367,"mtime":1611851540230,"results":"100","hashOfConfig":"60"},{"size":231,"mtime":1611851540259,"results":"101","hashOfConfig":"60"},{"size":567,"mtime":1613359696341,"results":"102","hashOfConfig":"60"},{"size":1395,"mtime":1613418911385,"results":"103","hashOfConfig":"60"},{"size":321,"mtime":1613416412317,"results":"104","hashOfConfig":"60"},{"size":534,"mtime":1611851917736,"results":"105","hashOfConfig":"60"},{"size":190,"mtime":1611851540229,"results":"106","hashOfConfig":"60"},{"size":7197,"mtime":1613345412132,"results":"107","hashOfConfig":"60"},{"size":538,"mtime":1612396074061,"results":"108","hashOfConfig":"60"},{"size":762,"mtime":1613086466569,"results":"109","hashOfConfig":"60"},{"size":265,"mtime":1611851540244,"results":"110","hashOfConfig":"60"},{"size":725,"mtime":1613086466558,"results":"111","hashOfConfig":"60"},{"size":853,"mtime":1612396074046,"results":"112","hashOfConfig":"60"},{"size":465,"mtime":1611851540250,"results":"113","hashOfConfig":"60"},{"size":1504,"mtime":1613363435243,"results":"114","hashOfConfig":"60"},{"size":1716,"mtime":1613419318043,"results":"115","hashOfConfig":"60"},{"size":667,"mtime":1613332208591,"results":"116","hashOfConfig":"60"},{"size":1424,"mtime":1613418864642,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1hvmpmn",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"125"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"125"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryActions.ts",[],["251","252"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\seed\\seedData.ts",[],["253","254"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.styles.ts",[],["255","256"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-link\\CategoryLink.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.tsx",["257","258"],"import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useStyles } from './PostContainer.styles';\r\nimport { openSnackbar } from '../../redux/snackbars/snackbarsActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootStore } from '../../redux/store';\r\nimport { postState } from '../../redux/post/postReducer';\r\nimport { userState } from '../../redux/user/userReducer';\r\nimport { deletePost, getPost } from '../../redux/post/postActions';\r\nimport EditPostInfo from '../../components/edit-post-info/EditPost';\r\n\r\ninterface Props {\r\n  match: any\r\n}\r\n\r\nconst PostContainer: React.FC<Props> = ({match}) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const post = useSelector<RootStore, postState['currentPost']>(state => state.post.currentPost);\r\n  const currentUser = useSelector<RootStore, userState['currentUser']>(state => state.user.currentUser);\r\n  const token = useSelector<RootStore, userState[\"token\"]>((state) => state.user.token);\r\n  console.log('POST:', post)\r\n  const {title, image_url, city, state, description, price, author, user_id } = post;\r\n  \r\n  \r\n  useEffect(() => {\r\n    dispatch(getPost(match.params.postId))\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    dispatch(openSnackbar('Opening third party email service', 'success'));\r\n    window.location.href = `mailto:${author?.email}`;\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deletePost(post.post_id, token));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.titleSection}>\r\n        <h1>{title}</h1>\r\n        <Button variant='contained' color='primary' onClick={handleClick}>Reply</Button>\r\n      </div>\r\n      <img \r\n        className={classes.image}\r\n        src={image_url} alt=\"\" />\r\n      <div className={classes.locationPrice}>\r\n        <span>{city}, {state}</span>\r\n        <span>${price}</span>\r\n      </div>\r\n      <div className={classes.bottomSection}>\r\n        <p>{description}</p>\r\n        <div>\r\n          <Button variant='contained' href='/'>Go Back</Button>\r\n          {\r\n            currentUser.user_id === user_id &&\r\n            <div className={classes.postButtons}>\r\n              <EditPostInfo />\r\n              <Button variant='contained' color='secondary' onClick={handleDelete}>Delete</Button>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )  \r\n};\r\n\r\nexport default PostContainer;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\App.tsx",["259"],"import React, {useEffect} from \"react\";\r\nimport \"./App.css\";\r\n// Pages\r\nimport Homepage from \"./pages/homepage/homepage\";\r\nimport CreatePostPage from \"./pages/create-post-page/CreatePostPage\";\r\nimport CategoryResultsPage from \"./pages/search-results-page/CategoryResultsPage\";\r\nimport SearchResultsPage from './pages/search-results-page/SearchResultsPage';\r\nimport PostPage from \"./pages/post-page/PostPage\";\r\nimport UserProfile from \"./pages/user-profile-page/UserProfile\";\r\n// Components:\r\nimport CustomSnackbar from \"./components/snackbar-feedback/Snackbar\";\r\n// React Router:\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n// Redux State Management:\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAllPosts } from \"./redux/post/postActions\";\r\nimport SubCategoryResultsPage from \"./pages/search-results-page/SubCategoryResultsPage\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  // Making get requests to database to initialize state:\r\n  useEffect(() => {\r\n    dispatch(getAllPosts());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Homepage />} />\r\n          <Route exact path=\"/user/:userId\" component={UserProfile} />\r\n          <Route exact path=\"/posts/new\" component={CreatePostPage} />\r\n          <Route \r\n              exact \r\n              path='/posts/:postId' \r\n              render={({match}) => \r\n              <PostPage \r\n                match={match}\r\n              />\r\n            }\r\n              />\r\n          <Route \r\n            exact path=\"/search/:searchQuery\"\r\n            render={({match}) => \r\n              <SearchResultsPage searchQuery={match.params.searchQuery} />\r\n            } \r\n          />\r\n          <Route \r\n            exact path=\"/:categoryId/\"\r\n            render={({match}) => \r\n              <CategoryResultsPage category={match.params.categoryId} match={match} />\r\n            } \r\n          />\r\n          <Route \r\n            path=\"/:categoryId/:subcatId\"\r\n            render={({match}) => \r\n              <SubCategoryResultsPage subcatId={parseInt(match.params.subcatId)} />\r\n            } \r\n          />\r\n\r\n        </Switch>\r\n      </Router>\r\n      <CustomSnackbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.tsx",[],["260","261"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postActions.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\homepage\\homepage.tsx",[],["262","263"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userReducer.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\snackbars\\snackbarsTypes.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-user-info\\EditUserInfo.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-user-info\\EditUserInfo.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\category-list\\CategoryListContainer.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userActions.ts",["264","265"],"import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { OPEN_SNACKBAR } from '../snackbars/snackbarsTypes';\r\nimport { \r\n  User, \r\n  UserDispatchTypes, \r\n  SET_CURRENT_USER, \r\n  REGISTRATION_START, \r\n  REGISTRATION_FAILED, \r\n  REGISTRATION_SUCCESS, \r\n  USERS_LOADING, \r\n  USERS_SUCCESS, \r\n  USERS_FAILED, \r\n  LOGOUT_CURRENT_USER,\r\n  UserLogin,\r\n  LOGIN_LOADING,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  UPDATE_USER\r\n} from './userTypes';\r\n\r\nexport const registerAndSetNewUser = (user: User) => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: REGISTRATION_START\r\n    });\r\n\r\n    const newUser = await axios.post('https://craigs2list-dev.herokuapp.com/users', user);\r\n\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: 'Registration Successful, Please Login!',\r\n      severity: 'success'\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REGISTRATION_FAILED,\r\n      error: error\r\n    });\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: 'Registration Failed',\r\n      severity: 'error'\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllUsers = () => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: USERS_LOADING\r\n    });\r\n\r\n    const res = await axios.get('https://craigs2list-dev.herokuapp.com/users');\r\n\r\n    dispatch({\r\n      type: USERS_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USERS_FAILED,\r\n      error: error\r\n    })\r\n  }\r\n};\r\n\r\nexport const setCurrentUser = (user: User) => {\r\n  \r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: user,\r\n    token: ''\r\n  }\r\n};\r\n\r\nexport const logoutCurrentUser = () => (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  dispatch({\r\n    type: LOGOUT_CURRENT_USER,\r\n    token: '',\r\n  });\r\n\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {} as User,\r\n    token: '',\r\n  });\r\n  \r\n  dispatch({\r\n    type: OPEN_SNACKBAR,\r\n    message: \"Logout Successful\",\r\n    severity: 'warning'\r\n  })\r\n};\r\n\r\nexport const loginUser = (userLogin : UserLogin) => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: LOGIN_LOADING\r\n    });\r\n    \r\n    const loginInfo = await axios.post('https://craigs2list-dev.herokuapp.com/login', userLogin);\r\n    \r\n    const user = await axios.get(`https://craigs2list-dev.herokuapp.com/users/${loginInfo.data.user_id}`);\r\n    \r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: user.data,\r\n      token: loginInfo.data.token\r\n    });\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: userLogin,\r\n      token: loginInfo.data.token\r\n    });\r\n    console.log('token assigned:')\r\n\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: 'Login Successful',\r\n      severity: 'success'\r\n    });\r\n\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAILED\r\n    });\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: error.message,\r\n      severity: 'error'\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user: User, userId: number | undefined, token: string | undefined) => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    }\r\n    const updatedUser = await axios.patch(`https://craigs2list-dev.herokuapp.com/users/${userId}`, user, config);\r\n    console.log(updatedUser);\r\n    dispatch({\r\n      type: UPDATE_USER,\r\n      user: updatedUser.data\r\n    });\r\n\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: updatedUser.data,\r\n    });\r\n\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: 'Update successful',\r\n      severity: 'success'\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: OPEN_SNACKBAR,\r\n      message: error.message,\r\n      severity: 'error'\r\n    })\r\n  }\r\n};","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\navbar\\Navbar.tsx",["266"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\signin-signup\\SignInSignUp.tsx",["267","268"],"import React, { useState, useEffect } from 'react';\r\n// Material UI Components:\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\n// Material UI Form Validator:\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n// Styles:\r\nimport { useStyles } from './SignInSignUp.styles';\r\n// Redux State Management:\r\nimport { loginUser, registerAndSetNewUser, getAllUsers } from '../../redux/user/userActions';\r\nimport { User, UserLogin } from '../../redux/user/userTypes';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userState } from '../../redux/user/userReducer';\r\nimport { RootStore } from '../../redux/store';\r\n\r\nconst SignInSignUp:React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  \r\n  const users = useSelector<RootStore, userState[\"users\"]>((state) => state.user.users);\r\n  \r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule('isEmailUnique', (value: string) => \r\n      users.every(({email}) => email?.toLowerCase() !== value.toLowerCase())\r\n    );\r\n    ValidatorForm.addValidationRule('passwordsMustMatch', () => \r\n      password === passwordConfirmation \r\n    );\r\n  }, []);\r\n\r\n  const [openNameForm, setOpenNameForm] = useState<boolean>(false);\r\n  const [user, setUser] = useState<User>({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    city: '',\r\n    state: '',\r\n    zip: '',\r\n  }); \r\n\r\n  const [userLogin, setUserLogin] = useState<UserLogin>({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState<string>('');\r\n\r\n  const { name, email, password, city, state, zip } = user;\r\n\r\n  const handleOpenNameForm = () => {\r\n    setOpenNameForm(true);\r\n  };\r\n\r\n  const handleCloseNameForm = () => {\r\n    setOpenNameForm(false);\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n  };\r\n  const handleLoginChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserLogin({ ...userLogin, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleLogin = async (event: any) => {\r\n    event.preventDefault();\r\n    dispatch(loginUser(userLogin));\r\n\r\n    setUserLogin({\r\n      email: '',\r\n      password: ''\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    \r\n    dispatch(registerAndSetNewUser(user));\r\n    \r\n    setUser({\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      city: '',\r\n      state: '',\r\n      zip: '',\r\n    });\r\n    setPasswordConfirmation('');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button color=\"primary\" onClick={handleOpenNameForm}>\r\n        Sign Up / Login\r\n      </Button>\r\n      <Dialog \r\n        open={openNameForm} \r\n        onClose={handleCloseNameForm} \r\n        aria-labelledby=\"form-dialog-title\" \r\n        className={classes.dialogContainer}\r\n        fullWidth={true}\r\n        maxWidth='lg'\r\n        >\r\n          <DialogContentText className={classes.dialogContentText}>\r\n            Please fill out one of the forms below: \r\n          </DialogContentText>\r\n          <div className={classes.dialogForms}>\r\n            <form \r\n              className={classes.signIn}\r\n              onSubmit={handleLogin}\r\n              >\r\n              <DialogTitle id=\"form-dialog-title\">Sign In</DialogTitle>\r\n              <TextField \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Email\"\r\n                name=\"email\"\r\n                onChange={handleLoginChange}\r\n                value={userLogin.email} />\r\n              <TextField \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleLoginChange}\r\n                value={userLogin.password} />\r\n              <DialogActions>\r\n                <Button type='submit' color=\"primary\" variant='contained'>\r\n                  Sign In\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n            <Divider variant='middle' orientation='vertical' flexItem/>\r\n            <ValidatorForm className={classes.signUp} onSubmit={handleSubmit}>\r\n              <DialogTitle id=\"form-dialog-title\">Sign Up</DialogTitle>\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Name\" \r\n                name='name'\r\n                variant=\"outlined\"\r\n                value={name}\r\n                onChange={handleChange}\r\n                validators={['required']}\r\n                errorMessages={['Name required']}\r\n               />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Email\" \r\n                name='email'\r\n                variant=\"outlined\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={handleChange}\r\n                validators={['required', 'isEmailUnique']}\r\n                errorMessages={['Email Required', 'This email is already in use, please sign in']}\r\n                />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Password\" \r\n                name='password'\r\n                type='password' \r\n                variant=\"outlined\"\r\n                value={password}\r\n                onChange={handleChange} \r\n                validators={['required']}\r\n                errorMessages={['Password Required']}\r\n                />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Confirm Password\" \r\n                name='passwordConfirmation'\r\n                type='password' \r\n                variant=\"outlined\"\r\n                value={passwordConfirmation}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPasswordConfirmation(e.target.value)}\r\n                validators={['required', 'passwordsMustMatch']}\r\n                errorMessages={['Confirm Password', 'Passwords must match']}\r\n                />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"City\" \r\n                name='city'\r\n                variant=\"outlined\"\r\n                value={city}\r\n                onChange={handleChange}\r\n                 />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"State\" \r\n                name='state'\r\n                variant=\"outlined\"\r\n                value={state}\r\n                onChange={handleChange}\r\n                />\r\n              <TextValidator \r\n                className={classes.input} \r\n                id=\"outlined-basic\" \r\n                label=\"Zip Code\" \r\n                name='zip'\r\n                variant=\"outlined\"\r\n                value={zip}\r\n                onChange={handleChange}\r\n                />\r\n              <DialogActions>\r\n                <Button type='submit' color=\"primary\" variant='contained'>\r\n                  Join now!\r\n                </Button>\r\n              </DialogActions>\r\n            </ValidatorForm>\r\n          </div>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SignInSignUp;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\user-drop-down-icon\\UserDropDown.tsx",[],["269","270"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-searchbar\\CustomSearchBar.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-drawer\\CustomDrawer.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\index.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\create-post-page\\CreatePostPage.tsx",[],["271","272"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postTypes.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\drop-down-menu\\DropDownMenu.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\create-posting-button\\CreatePostingButton.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\CategoryResultsPage.tsx",["273","274"],"import React from \"react\";\r\nimport Navbar from \"../../containers/navbar/Navbar\";\r\nimport { useStyles } from \"./CategoryResultsPage.styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postState } from \"../../redux/post/postReducer\";\r\nimport { RootStore } from \"../../redux/store\";\r\nimport ReusableHeader from \"../../components/reusable-header/ReusableHeader\";\r\nimport PostListContainer from \"../../containers/post-list/PostListContainer\";\r\ninterface Props {\r\n  category: string,\r\n  match: any\r\n};\r\n\r\nconst CategoryResultsPage: React.FC<Props> = ({category, match}) => {\r\n  const posts = useSelector<RootStore, postState['posts']>(state => state.post.posts);\r\n\r\n  const capitalize = (s: string | undefined) => {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1)\r\n  }\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      {category === 'goods' ?\r\n      <div>\r\n        <ReusableHeader text={`All ${capitalize(category)}`} fontSize='38px' />\r\n        <PostListContainer\r\n              posts={posts}\r\n              header=''\r\n              seeAllLink=''\r\n              isCategory\r\n            />\r\n      </div>\r\n      :\r\n      <div>\r\n        <ReusableHeader text={`${capitalize(category)}`} fontSize='38px' />\r\n        <h1>Coming Soon!</h1>\r\n      </div>\r\n\r\n      }\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryResultsPage;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\user-profile-page\\UserProfile.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\post-page\\PostPage.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\snackbar-feedback\\Snackbar.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\user\\userTypes.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-radio-buttons\\CategoryRadioButtons.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-radio-buttons\\CategoryRadioButtons.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\item-link\\ItemLink.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-list\\PostListContainer.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\item-link\\ItemLink.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\create-post-form\\CreatePostForm.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-container\\PostContainer.styles.ts",[],["275","276"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-drawer\\CustomDrawer.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\navbar\\Navbar.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\reusable-header\\ReusableHeader.tsx",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\styles\\constants\\MediaQueries.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\category-overview\\CategoryOverview.tsx",["277","278"],"import React from 'react';\r\nimport ReusableHeader from \"../../components/reusable-header/ReusableHeader\";\r\nimport PostListContainer from \"../../containers/post-list/PostListContainer\";\r\n\r\ninterface Props {\r\n  category: string\r\n}\r\n\r\nconst CategoryOverview: React.FC<Props> = ({category}) => {\r\n  const capitalize = (s: string | undefined) => {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1)\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>{capitalize(category)}</h1>\r\n      \r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CategoryOverview;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\post\\postReducer.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\user-profile-page\\UserProfile.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\containers\\post-list\\PostListContainer.styles.ts",[],["279","280"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\reusable-header\\ReusableHeader.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-post-info\\EditPost.tsx",["281"],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\store.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\snackbars\\snackbarsReducer.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\create-post-page\\CreatePostPage.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryTypes.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\category\\categoryReducer.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\redux\\drawer\\drawerReducer.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\SubCategoryResultsPage.tsx",["282"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReusableHeader from \"../../components/reusable-header/ReusableHeader\";\r\nimport Navbar from \"../../containers/navbar/Navbar\";\r\nimport PostListContainer from \"../../containers/post-list/PostListContainer\";\r\nimport { getSubcatPosts } from \"../../redux/post/postActions\";\r\nimport { postState } from \"../../redux/post/postReducer\";\r\nimport { RootStore } from \"../../redux/store\";\r\nimport { seedCategories } from \"../../seed/seedData\";\r\nimport { useStyles } from \"./CategoryResultsPage.styles\";\r\n\r\ninterface Props {\r\n  subcatId: number\r\n}\r\n\r\nconst SubCategoryResultsPage: React.FC<Props> = ({ subcatId }) => {\r\n  const dispatch = useDispatch();\r\n  const name = seedCategories[0].subCategories[subcatId - 1] === undefined ? 'Coming Soon!' : seedCategories[0].subCategories[subcatId - 1].name;\r\n  const posts = useSelector<RootStore, postState['subcatPosts']>(state => state.post.subcatPosts);\r\n  const classes = useStyles();\r\n  console.log(subcatId, posts);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSubcatPosts(subcatId));\r\n  }, [subcatId]);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <ReusableHeader text={name} fontSize=\"38px\" />\r\n        <div className={classes.header}>\r\n          <PostListContainer\r\n            posts={posts}\r\n            header=''\r\n            seeAllLink=''\r\n            isCategory\r\n          />\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubCategoryResultsPage;","C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\custom-searchbar\\CustomSearchBar.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\components\\edit-post-info\\EditPost.styles.ts",[],"C:\\Users\\chang\\Desktop\\Chingu\\v26-bears-team-06\\src\\pages\\search-results-page\\SearchResultsPage.tsx",["283","284","285"],"import React, { useEffect } from \"react\";\r\nimport Navbar from \"../../containers/navbar/Navbar\";\r\nimport { useStyles } from \"./CategoryResultsPage.styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postState } from \"../../redux/post/postReducer\";\r\nimport { RootStore } from \"../../redux/store\";\r\nimport ReusableHeader from \"../../components/reusable-header/ReusableHeader\";\r\nimport PostListContainer from \"../../containers/post-list/PostListContainer\";\r\nimport { getSearchQueryPosts } from \"../../redux/post/postActions\";\r\n\r\ninterface Props {\r\n  searchQuery: string,\r\n  \r\n};\r\n\r\nconst SearchResultsPage: React.FC<Props> = ({searchQuery}) => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector<RootStore, postState['searchQueryPosts']>(state => state.post.searchQueryPosts);\r\n\r\n  const capitalize = (s: string | undefined) => {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getSearchQueryPosts(searchQuery));\r\n  }, [searchQuery]);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div>\r\n        <ReusableHeader text={`Search Results: ${searchQuery}`} fontSize='38px' />\r\n        <PostListContainer\r\n              posts={posts}\r\n              header=''\r\n              seeAllLink=''\r\n              isCategory\r\n            />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResultsPage;",{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"286","replacedBy":"290"},{"ruleId":"288","replacedBy":"291"},{"ruleId":"286","replacedBy":"292"},{"ruleId":"288","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":23,"column":34,"nodeType":"296","messageId":"297","endLine":23,"endColumn":39},{"ruleId":"298","severity":1,"message":"299","line":28,"column":6,"nodeType":"300","endLine":28,"endColumn":8,"suggestions":"301"},{"ruleId":"298","severity":1,"message":"302","line":25,"column":6,"nodeType":"300","endLine":25,"endColumn":8,"suggestions":"303"},{"ruleId":"286","replacedBy":"304"},{"ruleId":"288","replacedBy":"305"},{"ruleId":"286","replacedBy":"306"},{"ruleId":"288","replacedBy":"307"},{"ruleId":"294","severity":1,"message":"308","line":10,"column":3,"nodeType":"296","messageId":"297","endLine":10,"endColumn":23},{"ruleId":"294","severity":1,"message":"309","line":28,"column":11,"nodeType":"296","messageId":"297","endLine":28,"endColumn":18},{"ruleId":"310","severity":2,"message":"311","line":50,"column":34,"nodeType":"296","messageId":"312","endLine":50,"endColumn":41},{"ruleId":"294","severity":1,"message":"313","line":15,"column":44,"nodeType":"296","messageId":"297","endLine":15,"endColumn":55},{"ruleId":"298","severity":1,"message":"314","line":34,"column":6,"nodeType":"300","endLine":34,"endColumn":8,"suggestions":"315"},{"ruleId":"286","replacedBy":"316"},{"ruleId":"288","replacedBy":"317"},{"ruleId":"286","replacedBy":"318"},{"ruleId":"288","replacedBy":"319"},{"ruleId":"294","severity":1,"message":"320","line":4,"column":10,"nodeType":"296","messageId":"297","endLine":4,"endColumn":21},{"ruleId":"294","severity":1,"message":"321","line":21,"column":9,"nodeType":"296","messageId":"297","endLine":21,"endColumn":16},{"ruleId":"286","replacedBy":"322"},{"ruleId":"288","replacedBy":"323"},{"ruleId":"294","severity":1,"message":"324","line":2,"column":8,"nodeType":"296","messageId":"297","endLine":2,"endColumn":22},{"ruleId":"294","severity":1,"message":"325","line":3,"column":8,"nodeType":"296","messageId":"297","endLine":3,"endColumn":25},{"ruleId":"286","replacedBy":"326"},{"ruleId":"288","replacedBy":"327"},{"ruleId":"294","severity":1,"message":"328","line":23,"column":9,"nodeType":"296","messageId":"297","endLine":23,"endColumn":20},{"ruleId":"298","severity":1,"message":"302","line":25,"column":6,"nodeType":"300","endLine":25,"endColumn":16,"suggestions":"329"},{"ruleId":"294","severity":1,"message":"330","line":3,"column":10,"nodeType":"296","messageId":"297","endLine":3,"endColumn":19},{"ruleId":"294","severity":1,"message":"331","line":20,"column":9,"nodeType":"296","messageId":"297","endLine":20,"endColumn":19},{"ruleId":"298","severity":1,"message":"302","line":28,"column":6,"nodeType":"300","endLine":28,"endColumn":19,"suggestions":"332"},"no-native-reassign",["333"],"no-negated-in-lhs",["334"],["333"],["334"],["333"],["334"],"@typescript-eslint/no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.postId'. Either include them or remove the dependency array.","ArrayExpression",["335"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["336"],["333"],["334"],["333"],["334"],"'REGISTRATION_SUCCESS' is defined but never used.","'newUser' is assigned a value but never used.","no-restricted-globals","Unexpected use of 'history'.","defaultMessage","'getAllUsers' is defined but never used.","React Hook useEffect has missing dependencies: 'password', 'passwordConfirmation', and 'users'. Either include them or remove the dependency array.",["337"],["333"],["334"],["333"],["334"],"'useDispatch' is defined but never used.","'classes' is assigned a value but never used.",["333"],["334"],"'ReusableHeader' is defined but never used.","'PostListContainer' is defined but never used.",["333"],["334"],"'currentUser' is assigned a value but never used.",["338"],"'useStyles' is defined but never used.","'capitalize' is assigned a value but never used.",["339"],"no-global-assign","no-unsafe-negation",{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},"Update the dependencies array to be: [dispatch, match.params.postId]",{"range":"350","text":"351"},"Update the dependencies array to be: [dispatch]",{"range":"352","text":"353"},"Update the dependencies array to be: [password, passwordConfirmation, users]",{"range":"354","text":"355"},"Update the dependencies array to be: [dispatch, subcatId]",{"range":"356","text":"357"},"Update the dependencies array to be: [dispatch, searchQuery]",{"range":"358","text":"359"},[1230,1232],"[dispatch, match.params.postId]",[1048,1050],"[dispatch]",[1507,1509],"[password, passwordConfirmation, users]",[1128,1138],"[dispatch, subcatId]",[1043,1056],"[dispatch, searchQuery]"]